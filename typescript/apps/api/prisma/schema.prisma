// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  output          = "./generated/prisma"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Test {
  id                  Int      @id @default(autoincrement())
  name                String   @map("name")
  email               String   @map("email")
  age                 Int?     @map("age")
  isActive            Boolean  @default(true) @map("is_active")
  lastLaunchedAt      DateTime @default(now()) @map("last_launched_at")
  last_launch_os      OS       @map("last_launch_os")
  last_launch_version String   @map("last_launch_version")
  createdAt           DateTime @default(now()) @map("created_at")
  updatedAt           DateTime @updatedAt @map("updated_at")

  @@map("tests")
}

enum OS {
  IOS
  ANDROID
}

model User {
  id             String    @id
  name           String    @map("name")
  email          String    @map("email")
  emailVerified  Boolean   @map("email_verified")
  image          String?   @map("image")
  isOnboarded    Boolean?  @map("is_onboarded")
  lastLaunchedAt DateTime  @default(now()) @map("last_launched_at")
  sessions       Session[]
  accounts       Account[]
  createdAt      DateTime  @default(now()) @map("created_at")
  updatedAt      DateTime  @updatedAt @map("updated_at")

  @@unique([email])
  @@map("users")
}

model Session {
  id        String   @id
  expiresAt DateTime @map("expires_at")
  token     String   @map("token")
  ipAddress String?  @map("ip_address")
  userAgent String?  @map("user_agent")
  userId    String   @map("user_id")
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@unique([token])
  @@map("sessions")
}

model Account {
  id                    String    @id
  accountId             String    @map("account_id")
  providerId            String    @map("provider_id")
  userId                String    @map("user_id")
  user                  User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  accessToken           String?   @map("access_token")
  refreshToken          String?   @map("refresh_token")
  idToken               String?   @map("id_token")
  accessTokenExpiresAt  DateTime? @map("access_token_expires_at")
  refreshTokenExpiresAt DateTime? @map("refresh_token_expires_at")
  scope                 String?   @map("scope")
  password              String?   @map("password")
  createdAt             DateTime  @default(now()) @map("created_at")
  updatedAt             DateTime  @updatedAt @map("updated_at")

  @@map("accounts")
}

model Verification {
  id         String   @id
  identifier String   @map("identifier")
  value      String   @map("value")
  expiresAt  DateTime @map("expires_at")
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")

  @@map("verifications")
}
